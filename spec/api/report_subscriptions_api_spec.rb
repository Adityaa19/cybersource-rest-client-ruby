=begin
#CyberSource Flex API

#Simple PAN tokenization service

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for CyberSource::ReportSubscriptionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReportSubscriptionsApi' do
  before do
    # run before each test
    @instance = CyberSource::ReportSubscriptionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportSubscriptionsApi' do
    it 'should create an instance of ReportSubscriptionsApi' do
      expect(@instance).to be_instance_of(CyberSource::ReportSubscriptionsApi)
    end
  end

  # unit tests for create_subscription
  # Create Report Subscription for a report name by organization
  # 
  # @param report_name Name of the Report to Create
  # @param request_body Report subscription request payload
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_subscription
  # Delete subscription of a report name by organization
  # 
  # @param report_name Name of the Report to Delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_subscriptions
  # Retrieve all subscriptions by organization
  # 
  # @param [Hash] opts the optional parameters
  # @return [ReportingV3ReportSubscriptionsGet200Response]
  describe 'get_all_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription
  # Retrieve subscription for a report name by organization
  # 
  # @param report_name Name of the Report to Retrieve
  # @param [Hash] opts the optional parameters
  # @return [ReportingV3ReportSubscriptionsGet200ResponseSubscriptions]
  describe 'get_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
